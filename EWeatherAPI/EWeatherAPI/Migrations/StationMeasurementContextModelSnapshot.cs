// <auto-generated />
using EWeatherAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EWeatherAPI.Migrations
{
    [DbContext(typeof(StationMeasurementContext))]
    partial class StationMeasurementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("EWeatherAPI.Models.StationMeasurement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FeelTemperature")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GroundTemperature")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RainFallLastHour")
                        .HasColumnType("TEXT");

                    b.Property<string>("Regio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sunpower")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("TEXT");

                    b.Property<string>("WindDirection")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StationMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
